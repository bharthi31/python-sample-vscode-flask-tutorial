trigger:
  branches:
    include:
    - master
  paths:
    exclude:
    - blue-green-tf/azure_pipelines/green-deployment-pipeline.yml
    - blue-green-tf/azure_pipelines/teardown-pipeline.yml
    include:
    - blue-green-tf/azure_pipelines/config/teardown.json

pool: bharathi-bg-agpool

stages:
- stage:
  jobs:
  - job: TearDown
    displayName: Delete Deployment
    pool: bharathi-bg-agpool
    steps:
    - task: PythonScript@0
      displayName: 'Update Pipeline variables for deleting existing config on ADC'
      inputs:
        scriptPath: '$(System.DefaultWorkingDirectory)/blue-green-tf/azure_pipelines/config/read_teardown_config.py'
        arguments: --config_file $(System.DefaultWorkingDirectory)/blue-green-tf/azure_pipelines/config/teardown.json
    - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
      inputs:
        terraformVersion: '0.13.5'
      displayName: 'Install Terraform'
    
    - task: TerraformCLI@0
      inputs:
        command: 'init'
        workingDirectory: '$(System.DefaultWorkingDirectory)/blue-green-tf/green-tf'
        allowTelemetryCollection: false
        backendType: selfConfigured
      displayName: 'terraform init'

    - task: TerraformCLI@0
      displayName: 'terraform destroy'
      inputs:
        command: destroy
        workingDirectory: '$(System.DefaultWorkingDirectory)/$(TEARDOWN_TERRAFORM_SCRIPT_PATH)'
        environmentServiceName: 'NSDev GWY CA raghul.christus@citrix.com(23b03d6f-b164-4527-9acd-595d97060283)'
        commandOptions: '-var "backend_service=$(TEARDOWN_SERVICE_IP)" -var "traffic_split_percentage=$(TEARDOWN_TRAFFIC_SPLIT_PERCENTAGE)"'
        allowTelemetryCollection: false
      condition:  and(succeededOrFailed(), eq(variables['TEARDOWN_FLAG'], true))