# Explicitly set none for repositry trigger
trigger:
  branches:
    include:
      - master

resources:
  pipelines:
  - pipeline: myappbuild  # Name of the pipeline resource
    source: myapp-build-pipeline # Name of the triggering pipeline
    trigger: 
      branches:
      - master

variables:
  vmImageName: 'ubuntu-latest'

jobs:
- deployment: Deploy
  displayName: Deploy
  environment: dev
  pool: 
    vmImage: $(vmImageName)
  strategy:
    runOnce:
      deploy:
        steps:          
        - download: myappbuild
          artifact: drop  
        - bash: |
            export VM_IP="`hostname -i`"
            echo $VM_IP
            echo "##vso[task.setvariable variable=SERVICE_IP;]$VM_IP"
            cat $(System.DefaultWorkingDirectory)/_bharthi31_python-sample-vscode-flask-tutorial/blue-green-tf/green-tf/configs.txt
            traffic_split_per=`cat $(System.DefaultWorkingDirectory)/_bharthi31_python-sample-vscode-flask-tutorial/blue-green-tf/green-tf/configs.txt`
            export TRAFFIC_SPLIT_PERCENTAGE=`expr $traffic_split_per`
            echo "##vso[task.setvariable variable=TRAFFIC_SPLIT_PERCENTAGE;]$TRAFFIC_SPLIT_PERCENTAGE"
            displayName: 'Configure Backend Service IP'
        - task: TerraformInstaller@0
          inputs:
            terraformVersion: '0.13.5'
        - task: ExtractFiles@1
          inputs:
            archiveFilePatterns: '$(PIPELINE.WORKSPACE)/myappbuild/drop/$(resources.pipeline.myappbuild.runID).zip'
            destinationFolder: '$(agent.builddirectory)'
            cleanDestinationFolder: false
        - script: |  
            cat $(agent.builddirectory)/azure-pipelines/greatcode.txt
